name: CI/CD GreenCity Infrastructure

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'img/**'

# for debugging purposes
  workflow_dispatch:

env:
  AWS_REGION: 'us-east-1'
  TF_VAR_greencity_database_name: ${{ secrets.GREENCITY_DATABASE_NAME }}
  TF_VAR_greencity_database_username: ${{ secrets.GREENCITY_DATABASE_USERNAME }}
  TF_VAR_greencity_database_password: ${{ secrets.GREENCITY_DATABASE_PASSWORD }}
  TF_VAR_sonarqube_database_name: ${{ secrets.SONARQUBE_DATABASE_NAME }}
  TF_VAR_sonarqube_database_username: ${{ secrets.SONARQUBE_DATABASE_USERNAME }}
  TF_VAR_sonarqube_database_password: ${{ secrets.SONARQUBE_DATABASE_PASSWORD }}
  TF_VAR_sonarqube_current_admin_password: ${{ secrets.SONARQUBE_CURRENT_ADMIN_PASSWORD }}
  TF_VAR_sonarqube_admin_password: ${{ secrets.SONARQUBE_ADMIN_PASSWORD }}
  TF_VAR_artifactory_ui_ip: ${{ secrets.ARTIFACTORY_UI_IP }}
  TF_VAR_artifactory_ui_username: ${{ secrets.ARTIFACTORY_UI_USERNAME }}
  TF_VAR_artifactory_ui_password: ${{ secrets.ARTIFACTORY_UI_PASSWORD }}
  TF_VAR_artifactory_database_password: ${{ secrets.ARTIFACTORY_DATABASE_PASSWORD }}
  TF_VAR_datadog_api_key: ${{ secrets.DATADOG_API_KEY }}
  TF_VAR_grafana_admin_user: ${{ secrets.GRAFANA_ADMIN_USER }}
  TF_VAR_grafana_admin_password: ${{ secrets.GRAFANA_ADMIN_PASSWORD }}
  TF_VAR_api_key: ${{ secrets.API_KEY }}
  TF_VAR_api_secret: ${{ secrets.API_SECRET }}
  TF_VAR_azure_connection_string: ${{ secrets.AZURE_CONNECTION_STRING }}
  TF_VAR_email_address: ${{ secrets.EMAIL_ADDRESS }}
  TF_VAR_email_password: ${{ secrets.EMAIL_PASSWORD }}
  TF_VAR_google_api_key: ${{ secrets.GOOGLE_API_KEY }}
  TF_VAR_google_client_id: ${{ secrets.GOOGLE_CLIENT_ID }}
  TF_VAR_google_client_id_manager: ${{ secrets.GOOGLE_CLIENT_ID_MANAGER }}
  TF_VAR_token_key: ${{ secrets.TOKEN_KEY }}
  TF_VAR_helm_repo_username: ${{ secrets.HELM_REPO_USERNAME }}
  TF_VAR_helm_repo_password: ${{ secrets.HELM_REPO_PASSWORD }}
  TF_VAR_google_creds_json: ${{ secrets.GOOGLE_CREDS_JSON }}

jobs:

  validate:
    name: Validate infrastructure code
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write       # For GitHub OIDC Token
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@98637d7db679cd12b4ae373378e391551b922539                           # v3.5.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502      # v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #   role-to-assume: ${{ secrets.TERRAFORM_ROLE }}
        #   role-session-name: GA-Terraform-Greencity
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8                  # v3.1.1
        with:
          terraform_version: 1.9.2

      - name: Terraform init
        run: |
          terraform -chdir=infra init
          terraform -chdir=k8s_addons init

    #   - name: Terraform destroy k8s_addons
    #     run: |
    #       terraform -chdir=k8s_addons destroy -auto-approve -input=false

    #   - name: Terraform destroy infra
    #     run: |
    #       terraform -chdir=infra destroy -auto-approve -input=false

      - name: Terraform format
        run: |
          terraform -chdir=infra fmt -check
          terraform -chdir=k8s_addons fmt -check
    
      - name: Terraform validate
        run: |
          terraform -chdir=infra validate -no-color 
          terraform -chdir=k8s_addons validate -no-color 

      - name: Run Checkov action
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          quiet: true
          soft_fail: true
          download_external_modules: false

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b2c9bd0d8                 # v0.24.0
        with:
          scan-type: 'config'
          hide-progress: true
        #   exit-code: '1'
          ignore-unfixed: false
          severity: 'CRITICAL,HIGH'

    #   - name: Scan with GitLeaks
    #     uses: gitleaks/gitleaks-action@44c470ffc35caa8b1eb3e8012ca53c2f9bea4eb5                  # v2.3.
    #     env:
    #       GITLEAKS_ENABLE_UPLOAD_ARTIFACT: false

      - name: Setup Infracost
        uses: infracost/actions/setup@d5dd739fb5eae81f31bf09fea5c290186a91964a                   # v3.0.0
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Run Infracost on default branch and update Infracost Cloud
        run: |
          infracost breakdown --path .
          infracost breakdown --path=. --format=json --out-file=infracost.json
          infracost upload --path=infracost.json || echo "Always pass main branch runs even if there are policy failures"

  provision:
    name: Provision infrastructure
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write       # For GitHub OIDC Token
    steps:
      - name: Checkout infrastructure repository
        uses: actions/checkout@98637d7db679cd12b4ae373378e391551b922539                           # v3.5.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502      # v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #   role-to-assume: ${{ secrets.TERRAFORM_ROLE }}
        #   role-session-name: GA-Terraform-Greencity
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@651471c36a6092792c552e8b1bef71e592b462d8                  # v3.1.1
        with:
          terraform_version: 1.9.2

      - name: Terraform init
        run: |
          terraform -chdir=infra init
          terraform -chdir=k8s_addons init

      - name: Terraform plan Infrastructure
        run: terraform -chdir=infra plan -no-color -input=false 

      - name: Terraform apply Infrastructure
        run: terraform -chdir=infra apply -auto-approve -input=false || terraform -chdir=infra apply -auto-approve -input=false

      - name: Terraform plan k8s addons
        run: terraform -chdir=k8s_addons plan -no-color -input=false

      - name: Terraform apply k8s addons
        run: terraform -chdir=k8s_addons apply -auto-approve -input=false
